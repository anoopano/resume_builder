[{"/home/anoop/Documents/Coding Tasks/impress/src/index.js":"1","/home/anoop/Documents/Coding Tasks/impress/src/App.js":"2","/home/anoop/Documents/Coding Tasks/impress/src/components/ViewResume.js":"3","/home/anoop/Documents/Coding Tasks/impress/src/components/CreateResume.js":"4","/home/anoop/Documents/Coding Tasks/impress/src/components/Form.js":"5","/home/anoop/Documents/Coding Tasks/impress/src/constants/action-types.js":"6","/home/anoop/Documents/Coding Tasks/impress/src/actions/index.js":"7","/home/anoop/Documents/Coding Tasks/impress/src/reducers/rootReducer.js":"8","/home/anoop/Documents/Coding Tasks/impress/src/components/AutoComplete.js":"9"},{"size":599,"mtime":1609414122464,"results":"10","hashOfConfig":"11"},{"size":613,"mtime":1609338707217,"results":"12","hashOfConfig":"11"},{"size":1796,"mtime":1609433068114,"results":"13","hashOfConfig":"11"},{"size":791,"mtime":1609424861344,"results":"14","hashOfConfig":"11"},{"size":5760,"mtime":1609418825566,"results":"15","hashOfConfig":"11"},{"size":41,"mtime":1609404039353,"results":"16","hashOfConfig":"11"},{"size":141,"mtime":1609404607533,"results":"17","hashOfConfig":"11"},{"size":361,"mtime":1609404780087,"results":"18","hashOfConfig":"11"},{"size":1273,"mtime":1609418543784,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"wu13ok",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/anoop/Documents/Coding Tasks/impress/src/index.js",[],["41","42"],"/home/anoop/Documents/Coding Tasks/impress/src/App.js",["43","44"],"import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from 'react-router-dom';\nimport CreateResume from './components/CreateResume';\nimport ViewResume from './components/ViewResume';\n\n\nfunction App() {\n\n    return (\n            <Router>\n\n                <Switch>\n                    <Route exact path=\"/\">\n                        <CreateResume />\n                    </Route>\n\n                    <Route exact path=\"/resumes\">\n                        <ViewResume />\n                    </Route>\n\n                </Switch>\n\n            </Router>\n\n    )\n}\n\nexport default App\n","/home/anoop/Documents/Coding Tasks/impress/src/components/ViewResume.js",[],"/home/anoop/Documents/Coding Tasks/impress/src/components/CreateResume.js",["45"],"/home/anoop/Documents/Coding Tasks/impress/src/components/Form.js",["46","47","48"],"import React, { Component } from 'react';\nimport { Field, reduxForm, FieldArray } from 'redux-form';\nimport TagAutocomplete from './AutoComplete';\n\n\nfunction ContactForm({ handleSubmit }) {\n\n\n    const renderField = ({ input, label, type, placeholder, meta: { touched, error } }) => (\n        <div className=\"form row\">\n            <label className=\"col-sm-2 col-form-label\">{label}</label>\n            <div className=\"col-sm-10\">\n                <input className=\"form-control mb-3 col-sm-10\" {...input} type={type} placeholder={placeholder} />\n                {touched && error && <span>{error}</span>}\n            </div>\n        </div>\n    )\n\n\n\n\n    const renderEducation = ({ fields, meta: { error, submitFailed } }) => (\n\n\n        <ul className=\"list-group\">\n            <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mb-3 w-25\" onClick={() => fields.push({})}>\n                Add education\n                </button>\n            {fields.map((education, index) => (\n                <li key={index} className=\"list-group-item\">\n                    <Field\n                        name={`${education}.degree`}\n                        type=\"text\"\n                        component={renderField}\n                        label=\"Degree\"\n                        placeholder=\"degree\"\n                    />\n                    <Field\n                        name={`${education}.institution`}\n                        type=\"text\"\n                        component={renderField}\n                        label=\"Institution name\"\n                        placeholder=\"institution name\"\n                    />\n                    <Field\n                        name={`${education}.year`}\n                        type=\"text\"\n                        component={renderField}\n                        label=\"Year\"\n                        placeholder=\"year\"\n                    />\n                    <button className=\"btn btn-outline-secondary ml-auto w-25\" onClick={() => fields.remove(index)}>Remove</button>\n\n                </li>\n\n            ))}\n        </ul>\n\n    )\n\n\n    const renderExperience = ({ fields, meta: { error, submitFailed } }) => (\n\n\n        <ul className=\"list-group\">\n            <button type=\"button\" className=\"btn btn-outline-secondary mt-3 mb-3 w-25\" onClick={() => fields.push({})}>\n                Add experience\n                </button>\n            {fields.map((experience, index) => (\n                <li key={index} className=\"list-group-item\">\n                    <Field\n                        name={`${experience}.designation`}\n                        type=\"text\"\n                        component={renderField}\n                        label=\"Designation\"\n                        placeholder=\"designation\"\n                    />\n                    <Field\n                        name={`${experience}.company`}\n                        type=\"text\"\n                        component={renderField}\n                        label=\"Company\"\n                        placeholder=\"company\"\n                    />\n                    <Field\n                        name={`${experience}.year`}\n                        type=\"text\"\n                        component={renderField}\n                        label=\"Year\"\n                        placeholder=\"year\"\n                    />\n                    <button className=\"btn btn-outline-secondary ml-auto w-25\" onClick={() => fields.remove(index)}>Remove</button>\n\n                </li>\n\n            ))}\n        </ul>\n\n    )\n\n\n\n    return (\n        <form onSubmit={handleSubmit} className=\"d-flex flex-column mt-5\">\n\n            <h4 className=\"mb-3\">Details</h4>\n\n            <div className=\"form row\">\n                <label htmlFor=\"firstName\" className=\"col-sm-2 col-form-label\">First Name</label>\n                <div className=\"col-sm-10\">\n                    <Field className=\"form-control mb-3 col-sm-10\" name=\"firstName\" component=\"input\" type=\"text\" placeholder=\"first name\" />\n                </div>\n            </div>\n\n\n\n            <div className=\"form row\">\n                <label htmlFor=\"lastName\" className=\"col-sm-2 col-form-label\">Last Name</label>\n                <div className=\"col-sm-10\">\n                    <Field className=\"form-control mb-3 col-sm-10\" name=\"lastName\" component=\"input\" type=\"text\" placeholder=\"last name\" />\n                </div>\n            </div>\n\n\n            <div className=\"form row\">\n                <label htmlFor=\"address\" className=\"col-sm-2 col-form-label\">Address</label>\n                <div className=\"col-sm-10\">\n                    <Field className=\"form-control mb-3 col-sm-10\" name=\"address\" component=\"input\" type=\"text\" placeholder=\"address\"></Field>\n                </div>\n            </div>\n\n            <div className=\"form row\">\n                <label htmlFor=\"phone\" className=\"col-sm-2 col-form-label\">Phone</label>\n                <div className=\"col-sm-10\">\n                    <Field className=\"form-control mb-3 col-sm-10\" name=\"phone\" component=\"input\" type=\"text\" placeholder=\"phone\" />\n                </div>\n            </div>\n\n            <h4 className=\"mt-3\">Education</h4>\n\n            <FieldArray name=\"education\" component={renderEducation} />\n\n\n            <h4 className=\"mt-3\">Experience</h4>\n            <FieldArray name=\"experience\" component={renderExperience} />\n\n            <h4 className=\"mt-3\">Skills</h4>\n            {/*  <Field className=\"form-control mb-3 col-sm-10\" name=\"skills\" component={TagAutocomplete} /> */}\n\n            <button className=\"btn btn-secondary mt-5 mb-2\" type=\"submit\">Create</button>\n        </form>\n\n    );\n\n}\n\n// Decorate the form component\nContactForm = reduxForm({\n    form: 'contact' // a unique name for this form\n})(ContactForm);\n\nexport default ContactForm;\n\n\n","/home/anoop/Documents/Coding Tasks/impress/src/constants/action-types.js",[],"/home/anoop/Documents/Coding Tasks/impress/src/actions/index.js",[],"/home/anoop/Documents/Coding Tasks/impress/src/reducers/rootReducer.js",[],"/home/anoop/Documents/Coding Tasks/impress/src/components/AutoComplete.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":50,"nodeType":"55","messageId":"56","endLine":2,"endColumn":54},{"ruleId":"53","severity":1,"message":"57","line":2,"column":56,"nodeType":"55","messageId":"56","endLine":2,"endColumn":64},{"ruleId":"53","severity":1,"message":"58","line":4,"column":10,"nodeType":"55","messageId":"56","endLine":4,"endColumn":17},{"ruleId":"53","severity":1,"message":"59","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"53","severity":1,"message":"60","line":3,"column":8,"nodeType":"55","messageId":"56","endLine":3,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":158,"column":1,"nodeType":"55","messageId":"63","endLine":158,"endColumn":12},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'connect' is defined but never used.","'Component' is defined but never used.","'TagAutocomplete' is defined but never used.","no-func-assign","'ContactForm' is a function.","isAFunction","no-global-assign","no-unsafe-negation"]